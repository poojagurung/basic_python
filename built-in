def word_lengths(phrase):
    return list(map(len, phrase.split()))

y= word_lengths('How many letters are there in this phrase?')
print (y)


def digits_to_num(digits):
    return reduce(lambda x,y: x*10 + y,digits)

digits_to_num([3,4,3,2,1])
#print (z)


def filter_words(word_list,letter):

    return filter(lambda word: word[0]==letter,word_list)

l = ['hello','are','cat','dog','ham','hi','go','to','heart']
print (filter_words(l,'h'))

def concatenate(L1, L2, connector):
    
    return [word1+connector+word2 for (word1,word2) in zip(L1,L2)]


print (concatenate(['A','B'],['a','b'],'-'))

def d_list(L):
    return {key:value for value,key in enumerate(L)}

print (d_list(['a','b','c']))


def count_match_index(L):
   
    return len([num for count,num in enumerate(L) if num == count])

print (count_match_index([0,2,2,1,5,5,6,10]))
